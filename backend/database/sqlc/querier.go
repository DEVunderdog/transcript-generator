// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package database

import (
	"context"
)

type Querier interface {
	CountEncryptionKeys(ctx context.Context) (int64, error)
	CreateAPIKey(ctx context.Context, arg CreateAPIKeyParams) (ApiKey, error)
	CreateEmptyFile(ctx context.Context, arg CreateEmptyFileParams) (FileRegistry, error)
	CreateEncryptionKeys(ctx context.Context, arg CreateEncryptionKeysParams) (EncryptionKey, error)
	CreateUsers(ctx context.Context, email string) (User, error)
	DeleteAPIKey(ctx context.Context, credential []byte) error
	DeleteFiles(ctx context.Context, arg DeleteFilesParams) error
	GetAPIKey(ctx context.Context, credential []byte) (GetAPIKeyRow, error)
	GetActiveKeyBasedOnPurpose(ctx context.Context, purpose string) (GetActiveKeyBasedOnPurposeRow, error)
	GetFileByID(ctx context.Context, arg GetFileByIDParams) (GetFileByIDRow, error)
	GetFileByName(ctx context.Context, arg GetFileByNameParams) (FileRegistry, error)
	GetUsersID(ctx context.Context, email string) (int32, error)
	ListAllFiles(ctx context.Context, arg ListAllFilesParams) ([]ListAllFilesRow, error)
	ListConflictingFiles(ctx context.Context, arg ListConflictingFilesParams) ([]ListConflictingFilesRow, error)
	UnlockAndLockFile(ctx context.Context, arg UnlockAndLockFileParams) (FileRegistry, error)
	UpdateFileMetadata(ctx context.Context, arg UpdateFileMetadataParams) (FileRegistry, error)
	UpdateFileName(ctx context.Context, arg UpdateFileNameParams) (FileRegistry, error)
	UpdateKeyStatus(ctx context.Context, arg UpdateKeyStatusParams) error
}

var _ Querier = (*Queries)(nil)
